name: 'jjaks-terraform'
# Requirements: 
#   Azure User Managed Identity with Federated credentials for GH Actions
#   Permissions: Contributor + User Access Administrator scope Subscription
#   GitHub repository secrets

on:  
  workflow_dispatch:  
    inputs:
      aks_first_deployment:
        description: 'Is it first AKS deployment ?'
        default: false
        required: false
        type: boolean  
#  push:
#    branches:
#    - master    
#  pull_request:
#    branches:
#    - main

permissions:
      id-token: write
      contents: read      

jobs:
  terraform:
    name: 'Terraform deployment'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: src-jjaks
    env:      
       ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
       ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
       ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
       ARM_USE_OIDC: true
       #TF_LOG: debug

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: OIDC Login to Azure Public Cloud (using Azure User Managed Identity)
      uses: Azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}       

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -var aks_first_deployment=${{ inputs.aks_first_deployment }}

    - name: Terraform Apply
      if: ${{ (github.ref == 'refs/heads/master' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch') }}
      run: terraform apply -auto-approve -var aks_first_deployment=${{ inputs.aks_first_deployment }}

    - name: Terraform Output
      run: terraform output kube_config_raw
